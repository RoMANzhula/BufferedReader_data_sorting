import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in)); //открываем поток для ввода данных с клавиатуры

        String inputString; //создаем ссылочную переменную без инициализации (будет выполнять роль контейнера для введенных пользователем данных)

        while (true) { //создаем цикл, который будет выполняться бесконечно
            System.out.println("Please input data: "); //приглашаем пользователя ввести данные в консоль
            inputString = bufferedReader.readLine(); //инициализируем переменную-контейнер = введенной пользователем строке, при этом мы
            //в главный метод main() пробрасываем исключения входного-выходного потока (throws IOException) либо можно воспользоваться
            //блоком try-catch для перехвата исключений, или try-with-resource

            if (inputString.equals("exit")) { //во избежания бесконечности цикла мы устанавливаем проверку - если введенная пользователем строка будет = exit, то
                break; //выполняем команду остановки программы
            }

            try {
                if (inputString.indexOf(".") > 0) { //в веденной пользователем строке выполняем поиск элемента точка (если присутствует,
                    // то метод indexOf вернет индекс первого нахождения данного элемента, если не найдет - возвращает -1) и если есть
                    //точка, то выполняем следующие действия

                    Double doubleValue = Double.parseDouble(inputString); //создаем ссылочную переменную типа Double и инициализируем
                    //ее данными введенными пользователем, но при этом мы выполняем преобразование данных к типу Double(класс-обертка для работы с обьектами)
                    print(doubleValue); //с помощью метода print, выводим в консоль данное значение
                    continue; //передаем действия пользователю для ввода данных с клавиатуры
                }

                int intValue = Integer.parseInt(inputString); //создаем ссылочную переменную типа int и инициализируем
                //ее данными введенными пользователем, но при этом мы выполняем преобразование данных к типу Integer(класс-обертка для работы с обьектами)
                if (intValue > 0 && intValue < 128) { //если введенное число будет больше 0 и меньше 128 (в таком диапазоне), то
                    print((short) intValue); //печатаем данное число, приведенное к типу short
                    continue; //передаем действия пользователю для ввода данных с клавиатуры
                }
                if (intValue >= 128 || intValue <= 0) { //если введенное число будет больше либо= 120 или меньше либо= 0, то
                    print(intValue); //выводим в консоль данное значение
                    continue; //передаем действия пользователю для ввода данных с клавиатуры
                }
            } catch (NumberFormatException numberFormatException) { //перехватываем исключение когда не может преобразовать String в числовой тип

            }
            print(inputString); //в других случаях (когда данные являются строкой) печатаем строковое представление введенных данных пользователем
        }
    }
    public static void print(Double value) { //публичный статический метод, принимающий на вход данные типа Double, который
        System.out.println("It is type Double, value " + value); //выводит в консоль надпись + значение
    }

    public static void print(String value) { //публичный статический метод, принимающий на вход данные типа String, который
        System.out.println("It is type String, value " + value); //выводит в консоль надпись + значение
    }

    public static void print(short value) { //публичный статический метод, принимающий на вход данные типа short, который
        System.out.println("It is type short, value " + value); //выводит в консоль надпись + значение
    }

    public static void print(Integer value) { //публичный статический метод, принимающий на вход данные типа Integer, который
        System.out.println("It is type Integer, value " + value); //выводит в консоль надпись + значение
    }
}

//В этой задаче тебе нужно:
//Считывать с консоли данные, пока не будет введено слово "exit".
//Для каждого значения, кроме "exit", вызвать метод print(). Если значение:
//содержит точку '.', вызвать метод print() для Double;
//больше нуля, но меньше 128, вызвать метод print() для short;
//меньше либо равно нулю или больше либо равно 128, вызвать метод print() для Integer;
//иначе — вызвать метод print() для String.
